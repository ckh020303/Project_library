; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\mpuiic.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\mpuiic.d --feedback=.\Objects\Project.fed --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Start -I.\User -I.\Library -I.\System -I.\System\delay -I.\System\sys -I.\System\usart -I.\Hardware\Encoder -I.\Hardware\Motor -I.\Hardware\MPU6050 -I.\Hardware\MPU6050\eMPL -I.\Hardware\OLED -I.\Hardware\PWM -I.\Public\Bit-Band -I.\Public\SystemClock -I.\Public\SysTick-Timer -I.\Hardware\Control -IC:\Users\GCP\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__UVISION_VERSION=535 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\mpuiic.crf Hardware\MPU6050\mpuiic.c]
                          THUMB

                          AREA ||i.MPU_IIC_Ack||, CODE, READONLY, ALIGN=2

                  MPU_IIC_Ack PROC
;;;63     //产生ACK应答
;;;64     void MPU_IIC_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;65     {
;;;66     	MPU_IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490e              LDR      r1,|L1.64|
000006  6008              STR      r0,[r1,#0]
;;;67     	MPU_SDA_OUT();
000008  480e              LDR      r0,|L1.68|
00000a  6800              LDR      r0,[r0,#0]
00000c  f02000f0          BIC      r0,r0,#0xf0
000010  490c              LDR      r1,|L1.68|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0400030          ORR      r0,r0,#0x30
00001c  6008              STR      r0,[r1,#0]
;;;68     	MPU_IIC_SDA=0;
00001e  2000              MOVS     r0,#0
000020  4909              LDR      r1,|L1.72|
000022  f8c101a4          STR      r0,[r1,#0x1a4]
;;;69     	MPU_IIC_Delay();
000026  f7fffffe          BL       MPU_IIC_Delay
;;;70     	MPU_IIC_SCL=1;
00002a  2001              MOVS     r0,#1
00002c  4904              LDR      r1,|L1.64|
00002e  6008              STR      r0,[r1,#0]
;;;71     	MPU_IIC_Delay();
000030  f7fffffe          BL       MPU_IIC_Delay
;;;72     	MPU_IIC_SCL=0;
000034  2000              MOVS     r0,#0
000036  4904              LDR      r1,|L1.72|
000038  f8c101a0          STR      r0,[r1,#0x1a0]
;;;73     }
00003c  bd10              POP      {r4,pc}
;;;74     //不产生ACK应答		    
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
                          DCD      0x422181a0
                  |L1.68|
                          DCD      0x40010c04
                  |L1.72|
                          DCD      0x42218000

                          AREA ||i.MPU_IIC_Delay||, CODE, READONLY, ALIGN=1

                  MPU_IIC_Delay PROC
;;;4      //MPU IIC 延时函数
;;;5      void MPU_IIC_Delay(void)
000000  b510              PUSH     {r4,lr}
;;;6      {
;;;7      	delay_us(2);
000002  2002              MOVS     r0,#2
000004  f7fffffe          BL       delay_us
;;;8      }
000008  bd10              POP      {r4,pc}
;;;9      
                          ENDP


                          AREA ||i.MPU_IIC_Init||, CODE, READONLY, ALIGN=2

                  MPU_IIC_Init PROC
;;;10     //初始化IIC
;;;11     void MPU_IIC_Init(void)
000000  b508              PUSH     {r3,lr}
;;;12     {			
;;;13       GPIO_InitTypeDef GPIO_InitStructure;
;;;14       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB | RCC_APB2Periph_AFIO, ENABLE); //使能PB端口时钟
000002  2101              MOVS     r1,#1
000004  2009              MOVS     r0,#9
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;15       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8|GPIO_Pin_9;	//端口配置
00000a  f44f7040          MOV      r0,#0x300
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;16       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;      //复用推挽输出
000012  2018              MOVS     r0,#0x18
000014  f88d0003          STRB     r0,[sp,#3]
;;;17     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;     //50M
000018  2003              MOVS     r0,#3
00001a  f88d0002          STRB     r0,[sp,#2]
;;;18       GPIO_Init(GPIOB, &GPIO_InitStructure);					      //根据设定参数初始化GPIOB 
00001e  4669              MOV      r1,sp
000020  4801              LDR      r0,|L3.40|
000022  f7fffffe          BL       GPIO_Init
;;;19     }
000026  bd08              POP      {r3,pc}
;;;20     //产生IIC起始信号
                          ENDP

                  |L3.40|
                          DCD      0x40010c00

                          AREA ||i.MPU_IIC_NAck||, CODE, READONLY, ALIGN=2

                  MPU_IIC_NAck PROC
;;;74     //不产生ACK应答		    
;;;75     void MPU_IIC_NAck(void)
000000  b510              PUSH     {r4,lr}
;;;76     {
;;;77     	MPU_IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490e              LDR      r1,|L4.64|
000006  6008              STR      r0,[r1,#0]
;;;78     	MPU_SDA_OUT();
000008  480e              LDR      r0,|L4.68|
00000a  6800              LDR      r0,[r0,#0]
00000c  f02000f0          BIC      r0,r0,#0xf0
000010  490c              LDR      r1,|L4.68|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0400030          ORR      r0,r0,#0x30
00001c  6008              STR      r0,[r1,#0]
;;;79     	MPU_IIC_SDA=1;
00001e  2001              MOVS     r0,#1
000020  4909              LDR      r1,|L4.72|
000022  f8c101a4          STR      r0,[r1,#0x1a4]
;;;80     	MPU_IIC_Delay();
000026  f7fffffe          BL       MPU_IIC_Delay
;;;81     	MPU_IIC_SCL=1;
00002a  2001              MOVS     r0,#1
00002c  4904              LDR      r1,|L4.64|
00002e  6008              STR      r0,[r1,#0]
;;;82     	MPU_IIC_Delay();
000030  f7fffffe          BL       MPU_IIC_Delay
;;;83     	MPU_IIC_SCL=0;
000034  2000              MOVS     r0,#0
000036  4904              LDR      r1,|L4.72|
000038  f8c101a0          STR      r0,[r1,#0x1a0]
;;;84     }					 				     
00003c  bd10              POP      {r4,pc}
;;;85     //IIC发送一个字节
                          ENDP

00003e  0000              DCW      0x0000
                  |L4.64|
                          DCD      0x422181a0
                  |L4.68|
                          DCD      0x40010c04
                  |L4.72|
                          DCD      0x42218000

                          AREA ||i.MPU_IIC_Read_Byte||, CODE, READONLY, ALIGN=2

                  MPU_IIC_Read_Byte PROC
;;;104    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
;;;105    u8 MPU_IIC_Read_Byte(unsigned char ack)
000000  b570              PUSH     {r4-r6,lr}
;;;106    {
000002  4605              MOV      r5,r0
;;;107    	unsigned char i,receive=0;
000004  2400              MOVS     r4,#0
;;;108    	MPU_SDA_IN();//SDA设置为输入
000006  4816              LDR      r0,|L5.96|
000008  6800              LDR      r0,[r0,#0]
00000a  f02000f0          BIC      r0,r0,#0xf0
00000e  4914              LDR      r1,|L5.96|
000010  6008              STR      r0,[r1,#0]
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  f0400080          ORR      r0,r0,#0x80
00001a  6008              STR      r0,[r1,#0]
;;;109        for(i=0;i<8;i++ )
00001c  2600              MOVS     r6,#0
00001e  e014              B        |L5.74|
                  |L5.32|
;;;110    	{
;;;111            MPU_IIC_SCL=0; 
000020  2000              MOVS     r0,#0
000022  4910              LDR      r1,|L5.100|
000024  6008              STR      r0,[r1,#0]
;;;112            MPU_IIC_Delay();
000026  f7fffffe          BL       MPU_IIC_Delay
;;;113    		MPU_IIC_SCL=1;
00002a  2001              MOVS     r0,#1
00002c  490e              LDR      r1,|L5.104|
00002e  f8c101a0          STR      r0,[r1,#0x1a0]
;;;114            receive<<=1;
000032  0660              LSLS     r0,r4,#25
000034  0e04              LSRS     r4,r0,#24
;;;115            if(MPU_READ_SDA)receive++;   
000036  480b              LDR      r0,|L5.100|
000038  387c              SUBS     r0,r0,#0x7c
00003a  6800              LDR      r0,[r0,#0]
00003c  b108              CBZ      r0,|L5.66|
00003e  1c60              ADDS     r0,r4,#1
000040  b2c4              UXTB     r4,r0
                  |L5.66|
;;;116    		MPU_IIC_Delay(); 
000042  f7fffffe          BL       MPU_IIC_Delay
000046  1c70              ADDS     r0,r6,#1              ;109
000048  b2c6              UXTB     r6,r0                 ;109
                  |L5.74|
00004a  2e08              CMP      r6,#8                 ;109
00004c  dbe8              BLT      |L5.32|
;;;117        }					 
;;;118        if (!ack)
00004e  b915              CBNZ     r5,|L5.86|
;;;119            MPU_IIC_NAck();//发送nACK
000050  f7fffffe          BL       MPU_IIC_NAck
000054  e001              B        |L5.90|
                  |L5.86|
;;;120        else
;;;121            MPU_IIC_Ack(); //发送ACK   
000056  f7fffffe          BL       MPU_IIC_Ack
                  |L5.90|
;;;122        return receive;
00005a  4620              MOV      r0,r4
;;;123    }
00005c  bd70              POP      {r4-r6,pc}
;;;124    
                          ENDP

00005e  0000              DCW      0x0000
                  |L5.96|
                          DCD      0x40010c04
                  |L5.100|
                          DCD      0x422181a0
                  |L5.104|
                          DCD      0x42218000

                          AREA ||i.MPU_IIC_Send_Byte||, CODE, READONLY, ALIGN=2

                  MPU_IIC_Send_Byte PROC
;;;88     //0，无应答			  
;;;89     void MPU_IIC_Send_Byte(u8 txd)
000000  b570              PUSH     {r4-r6,lr}
;;;90     {                        
000002  4604              MOV      r4,r0
;;;91         u8 t;   
;;;92     	MPU_SDA_OUT(); 	    
000004  4812              LDR      r0,|L6.80|
000006  6800              LDR      r0,[r0,#0]
000008  f02000f0          BIC      r0,r0,#0xf0
00000c  4910              LDR      r1,|L6.80|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0400030          ORR      r0,r0,#0x30
000018  6008              STR      r0,[r1,#0]
;;;93         MPU_IIC_SCL=0;//拉低时钟开始数据传输
00001a  2000              MOVS     r0,#0
00001c  490d              LDR      r1,|L6.84|
00001e  6008              STR      r0,[r1,#0]
;;;94         for(t=0;t<8;t++)
000020  2500              MOVS     r5,#0
000022  e012              B        |L6.74|
                  |L6.36|
;;;95         {              
;;;96             MPU_IIC_SDA=(txd&0x80)>>7;
000024  09e0              LSRS     r0,r4,#7
000026  490b              LDR      r1,|L6.84|
000028  1d09              ADDS     r1,r1,#4
00002a  6008              STR      r0,[r1,#0]
;;;97             txd<<=1; 	  
00002c  0660              LSLS     r0,r4,#25
00002e  0e04              LSRS     r4,r0,#24
;;;98     		MPU_IIC_SCL=1;
000030  2001              MOVS     r0,#1
000032  4909              LDR      r1,|L6.88|
000034  f8c101a0          STR      r0,[r1,#0x1a0]
;;;99     		MPU_IIC_Delay(); 
000038  f7fffffe          BL       MPU_IIC_Delay
;;;100    		MPU_IIC_SCL=0;	
00003c  2000              MOVS     r0,#0
00003e  4905              LDR      r1,|L6.84|
000040  6008              STR      r0,[r1,#0]
;;;101    		MPU_IIC_Delay();
000042  f7fffffe          BL       MPU_IIC_Delay
000046  1c68              ADDS     r0,r5,#1              ;94
000048  b2c5              UXTB     r5,r0                 ;94
                  |L6.74|
00004a  2d08              CMP      r5,#8                 ;94
00004c  dbea              BLT      |L6.36|
;;;102        }	 
;;;103    } 	    
00004e  bd70              POP      {r4-r6,pc}
;;;104    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
                          ENDP

                  |L6.80|
                          DCD      0x40010c04
                  |L6.84|
                          DCD      0x422181a0
                  |L6.88|
                          DCD      0x42218000

                          AREA ||i.MPU_IIC_Start||, CODE, READONLY, ALIGN=2

                  MPU_IIC_Start PROC
;;;20     //产生IIC起始信号
;;;21     void MPU_IIC_Start(void)
000000  b510              PUSH     {r4,lr}
;;;22     {
;;;23     	MPU_SDA_OUT();     //sda线输出
000002  480e              LDR      r0,|L7.60|
000004  6800              LDR      r0,[r0,#0]
000006  f02000f0          BIC      r0,r0,#0xf0
00000a  490c              LDR      r1,|L7.60|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0400030          ORR      r0,r0,#0x30
000016  6008              STR      r0,[r1,#0]
;;;24     	MPU_IIC_SDA=1;	  	  
000018  2001              MOVS     r0,#1
00001a  4909              LDR      r1,|L7.64|
00001c  6008              STR      r0,[r1,#0]
;;;25     	MPU_IIC_SCL=1;
00001e  4909              LDR      r1,|L7.68|
000020  f8c101a0          STR      r0,[r1,#0x1a0]
;;;26     	MPU_IIC_Delay();
000024  f7fffffe          BL       MPU_IIC_Delay
;;;27      	MPU_IIC_SDA=0;//START:when CLK is high,DATA change form high to low 
000028  2000              MOVS     r0,#0
00002a  4905              LDR      r1,|L7.64|
00002c  6008              STR      r0,[r1,#0]
;;;28     	MPU_IIC_Delay();
00002e  f7fffffe          BL       MPU_IIC_Delay
;;;29     	MPU_IIC_SCL=0;//钳住I2C总线，准备发送或接收数据 
000032  2000              MOVS     r0,#0
000034  4903              LDR      r1,|L7.68|
000036  f8c101a0          STR      r0,[r1,#0x1a0]
;;;30     }	  
00003a  bd10              POP      {r4,pc}
;;;31     //产生IIC停止信号
                          ENDP

                  |L7.60|
                          DCD      0x40010c04
                  |L7.64|
                          DCD      0x422181a4
                  |L7.68|
                          DCD      0x42218000

                          AREA ||i.MPU_IIC_Stop||, CODE, READONLY, ALIGN=2

                  MPU_IIC_Stop PROC
;;;31     //产生IIC停止信号
;;;32     void MPU_IIC_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;33     {
;;;34     	MPU_SDA_OUT();//sda线输出
000002  480e              LDR      r0,|L8.60|
000004  6800              LDR      r0,[r0,#0]
000006  f02000f0          BIC      r0,r0,#0xf0
00000a  490c              LDR      r1,|L8.60|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0400030          ORR      r0,r0,#0x30
000016  6008              STR      r0,[r1,#0]
;;;35     	MPU_IIC_SCL=0;
000018  2000              MOVS     r0,#0
00001a  4909              LDR      r1,|L8.64|
00001c  6008              STR      r0,[r1,#0]
;;;36     	MPU_IIC_SDA=0;//STOP:when CLK is high DATA change form low to high
00001e  4909              LDR      r1,|L8.68|
000020  f8c101a4          STR      r0,[r1,#0x1a4]
;;;37      	MPU_IIC_Delay();
000024  f7fffffe          BL       MPU_IIC_Delay
;;;38     	MPU_IIC_SCL=1;  
000028  2001              MOVS     r0,#1
00002a  4905              LDR      r1,|L8.64|
00002c  6008              STR      r0,[r1,#0]
;;;39     	MPU_IIC_SDA=1;//发送I2C总线结束信号
00002e  4905              LDR      r1,|L8.68|
000030  f8c101a4          STR      r0,[r1,#0x1a4]
;;;40     	MPU_IIC_Delay();							   	
000034  f7fffffe          BL       MPU_IIC_Delay
;;;41     }
000038  bd10              POP      {r4,pc}
;;;42     //等待应答信号到来
                          ENDP

00003a  0000              DCW      0x0000
                  |L8.60|
                          DCD      0x40010c04
                  |L8.64|
                          DCD      0x422181a0
                  |L8.68|
                          DCD      0x42218000

                          AREA ||i.MPU_IIC_Wait_Ack||, CODE, READONLY, ALIGN=2

                  MPU_IIC_Wait_Ack PROC
;;;44     //        0，接收应答成功
;;;45     u8 MPU_IIC_Wait_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;46     {
;;;47     	u8 ucErrTime=0;
000002  2400              MOVS     r4,#0
;;;48     	MPU_SDA_IN();      //SDA设置为输入  
000004  4814              LDR      r0,|L9.88|
000006  6800              LDR      r0,[r0,#0]
000008  f02000f0          BIC      r0,r0,#0xf0
00000c  4912              LDR      r1,|L9.88|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0400080          ORR      r0,r0,#0x80
000018  6008              STR      r0,[r1,#0]
;;;49     	MPU_IIC_SDA=1;MPU_IIC_Delay();	   
00001a  2001              MOVS     r0,#1
00001c  490f              LDR      r1,|L9.92|
00001e  6008              STR      r0,[r1,#0]
000020  f7fffffe          BL       MPU_IIC_Delay
;;;50     	MPU_IIC_SCL=1;MPU_IIC_Delay();	 
000024  2001              MOVS     r0,#1
000026  490e              LDR      r1,|L9.96|
000028  f8c101a0          STR      r0,[r1,#0x1a0]
00002c  f7fffffe          BL       MPU_IIC_Delay
;;;51     	while(MPU_READ_SDA)
000030  e007              B        |L9.66|
                  |L9.50|
;;;52     	{
;;;53     		ucErrTime++;
000032  1c60              ADDS     r0,r4,#1
000034  b2c4              UXTB     r4,r0
;;;54     		if(ucErrTime>250)
000036  2cfa              CMP      r4,#0xfa
000038  dd03              BLE      |L9.66|
;;;55     		{
;;;56     			MPU_IIC_Stop();
00003a  f7fffffe          BL       MPU_IIC_Stop
;;;57     			return 1;
00003e  2001              MOVS     r0,#1
                  |L9.64|
;;;58     		}
;;;59     	}
;;;60     	MPU_IIC_SCL=0;//时钟输出0 	   
;;;61     	return 0;  
;;;62     } 
000040  bd10              POP      {r4,pc}
                  |L9.66|
000042  4806              LDR      r0,|L9.92|
000044  3880              SUBS     r0,r0,#0x80           ;51
000046  6800              LDR      r0,[r0,#0]            ;51
000048  2800              CMP      r0,#0                 ;51
00004a  d1f2              BNE      |L9.50|
00004c  4903              LDR      r1,|L9.92|
00004e  1f09              SUBS     r1,r1,#4              ;60
000050  6008              STR      r0,[r1,#0]            ;60
000052  bf00              NOP                            ;61
000054  e7f4              B        |L9.64|
;;;63     //产生ACK应答
                          ENDP

000056  0000              DCW      0x0000
                  |L9.88|
                          DCD      0x40010c04
                  |L9.92|
                          DCD      0x422181a4
                  |L9.96|
                          DCD      0x42218000
