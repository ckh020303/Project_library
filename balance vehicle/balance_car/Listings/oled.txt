; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\oled.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\oled.d --feedback=.\Objects\Project.fed --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Start -I.\User -I.\Library -I.\System -I.\System\delay -I.\System\sys -I.\System\usart -I.\Hardware\Encoder -I.\Hardware\Motor -I.\Hardware\MPU6050 -I.\Hardware\MPU6050\eMPL -I.\Hardware\OLED -I.\Hardware\PWM -I.\Public\Bit-Band -I.\Public\SystemClock -I.\Public\SysTick-Timer -I.\Hardware\Control -IC:\Users\GCP\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__UVISION_VERSION=535 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\oled.crf Hardware\OLED\oled.c]
                          THUMB

                          AREA ||i.OLED_Clear||, CODE, READONLY, ALIGN=1

                  OLED_Clear PROC
;;;113      */
;;;114    void OLED_Clear(void)
000000  b570              PUSH     {r4-r6,lr}
;;;115    {  
;;;116    	uint8_t i, j;
;;;117    	for (j = 0; j < 8; j++)
000002  2400              MOVS     r4,#0
000004  e00e              B        |L1.36|
                  |L1.6|
;;;118    	{
;;;119    		OLED_SetCursor(j, 0);
000006  2100              MOVS     r1,#0
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       OLED_SetCursor
;;;120    		for(i = 0; i < 128; i++)
00000e  2500              MOVS     r5,#0
000010  e004              B        |L1.28|
                  |L1.18|
;;;121    		{
;;;122    			OLED_WriteData(0x00);
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       OLED_WriteData
000018  1c68              ADDS     r0,r5,#1              ;120
00001a  b2c5              UXTB     r5,r0                 ;120
                  |L1.28|
00001c  2d80              CMP      r5,#0x80              ;120
00001e  dbf8              BLT      |L1.18|
000020  1c60              ADDS     r0,r4,#1              ;117
000022  b2c4              UXTB     r4,r0                 ;117
                  |L1.36|
000024  2c08              CMP      r4,#8                 ;117
000026  dbee              BLT      |L1.6|
;;;123    		}
;;;124    	}
;;;125    }
000028  bd70              POP      {r4-r6,pc}
;;;126    
                          ENDP


                          AREA ||i.OLED_I2C_Init||, CODE, READONLY, ALIGN=2

                  OLED_I2C_Init PROC
;;;8      /*引脚初始化*/
;;;9      void OLED_I2C_Init(void)
000000  b508              PUSH     {r3,lr}
;;;10     {
;;;11         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;12     	
;;;13     	GPIO_InitTypeDef GPIO_InitStructure;
;;;14      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
00000a  2014              MOVS     r0,#0x14
00000c  f88d0003          STRB     r0,[sp,#3]
;;;15     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;16     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
000016  f44f6080          MOV      r0,#0x400
00001a  f8ad0000          STRH     r0,[sp,#0]
;;;17      	GPIO_Init(GPIOB, &GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  480a              LDR      r0,|L2.76|
000022  f7fffffe          BL       GPIO_Init
;;;18     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
000026  f44f6000          MOV      r0,#0x800
00002a  f8ad0000          STRH     r0,[sp,#0]
;;;19      	GPIO_Init(GPIOB, &GPIO_InitStructure);
00002e  4669              MOV      r1,sp
000030  4806              LDR      r0,|L2.76|
000032  f7fffffe          BL       GPIO_Init
;;;20     	
;;;21     	OLED_W_SCL(1);
000036  2201              MOVS     r2,#1
000038  0291              LSLS     r1,r2,#10
00003a  4804              LDR      r0,|L2.76|
00003c  f7fffffe          BL       GPIO_WriteBit
;;;22     	OLED_W_SDA(1);
000040  2201              MOVS     r2,#1
000042  02d1              LSLS     r1,r2,#11
000044  4801              LDR      r0,|L2.76|
000046  f7fffffe          BL       GPIO_WriteBit
;;;23     }
00004a  bd08              POP      {r3,pc}
;;;24     
                          ENDP

                  |L2.76|
                          DCD      0x40010c00

                          AREA ||i.OLED_I2C_SendByte||, CODE, READONLY, ALIGN=2

                  OLED_I2C_SendByte PROC
;;;54       */
;;;55     void OLED_I2C_SendByte(uint8_t Byte)
000000  b570              PUSH     {r4-r6,lr}
;;;56     {
000002  4605              MOV      r5,r0
;;;57     	uint8_t i;
;;;58     	for (i = 0; i < 8; i++)
000004  2400              MOVS     r4,#0
000006  e015              B        |L3.52|
                  |L3.8|
;;;59     	{
;;;60     		OLED_W_SDA(Byte & (0x80 >> i));
000008  2080              MOVS     r0,#0x80
00000a  4120              ASRS     r0,r0,r4
00000c  ea000205          AND      r2,r0,r5
000010  f44f6100          MOV      r1,#0x800
000014  480e              LDR      r0,|L3.80|
000016  f7fffffe          BL       GPIO_WriteBit
;;;61     		OLED_W_SCL(1);
00001a  2201              MOVS     r2,#1
00001c  0291              LSLS     r1,r2,#10
00001e  480c              LDR      r0,|L3.80|
000020  f7fffffe          BL       GPIO_WriteBit
;;;62     		OLED_W_SCL(0);
000024  2200              MOVS     r2,#0
000026  f44f6180          MOV      r1,#0x400
00002a  4809              LDR      r0,|L3.80|
00002c  f7fffffe          BL       GPIO_WriteBit
000030  1c60              ADDS     r0,r4,#1              ;58
000032  b2c4              UXTB     r4,r0                 ;58
                  |L3.52|
000034  2c08              CMP      r4,#8                 ;58
000036  dbe7              BLT      |L3.8|
;;;63     	}
;;;64     	OLED_W_SCL(1);	//额外的一个时钟，不处理应答信号
000038  2201              MOVS     r2,#1
00003a  0291              LSLS     r1,r2,#10
00003c  4804              LDR      r0,|L3.80|
00003e  f7fffffe          BL       GPIO_WriteBit
;;;65     	OLED_W_SCL(0);
000042  2200              MOVS     r2,#0
000044  f44f6180          MOV      r1,#0x400
000048  4801              LDR      r0,|L3.80|
00004a  f7fffffe          BL       GPIO_WriteBit
;;;66     }
00004e  bd70              POP      {r4-r6,pc}
;;;67     
                          ENDP

                  |L3.80|
                          DCD      0x40010c00

                          AREA ||i.OLED_I2C_Start||, CODE, READONLY, ALIGN=2

                  OLED_I2C_Start PROC
;;;29       */
;;;30     void OLED_I2C_Start(void)
000000  b510              PUSH     {r4,lr}
;;;31     {
;;;32     	OLED_W_SDA(1);
000002  2201              MOVS     r2,#1
000004  02d1              LSLS     r1,r2,#11
000006  480a              LDR      r0,|L4.48|
000008  f7fffffe          BL       GPIO_WriteBit
;;;33     	OLED_W_SCL(1);
00000c  2201              MOVS     r2,#1
00000e  0291              LSLS     r1,r2,#10
000010  4807              LDR      r0,|L4.48|
000012  f7fffffe          BL       GPIO_WriteBit
;;;34     	OLED_W_SDA(0);
000016  2200              MOVS     r2,#0
000018  f44f6100          MOV      r1,#0x800
00001c  4804              LDR      r0,|L4.48|
00001e  f7fffffe          BL       GPIO_WriteBit
;;;35     	OLED_W_SCL(0);
000022  2200              MOVS     r2,#0
000024  f44f6180          MOV      r1,#0x400
000028  4801              LDR      r0,|L4.48|
00002a  f7fffffe          BL       GPIO_WriteBit
;;;36     }
00002e  bd10              POP      {r4,pc}
;;;37     
                          ENDP

                  |L4.48|
                          DCD      0x40010c00

                          AREA ||i.OLED_I2C_Stop||, CODE, READONLY, ALIGN=2

                  OLED_I2C_Stop PROC
;;;42       */
;;;43     void OLED_I2C_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;44     {
;;;45     	OLED_W_SDA(0);
000002  2200              MOVS     r2,#0
000004  f44f6100          MOV      r1,#0x800
000008  4806              LDR      r0,|L5.36|
00000a  f7fffffe          BL       GPIO_WriteBit
;;;46     	OLED_W_SCL(1);
00000e  2201              MOVS     r2,#1
000010  0291              LSLS     r1,r2,#10
000012  4804              LDR      r0,|L5.36|
000014  f7fffffe          BL       GPIO_WriteBit
;;;47     	OLED_W_SDA(1);
000018  2201              MOVS     r2,#1
00001a  02d1              LSLS     r1,r2,#11
00001c  4801              LDR      r0,|L5.36|
00001e  f7fffffe          BL       GPIO_WriteBit
;;;48     }
000022  bd10              POP      {r4,pc}
;;;49     
                          ENDP

                  |L5.36|
                          DCD      0x40010c00

                          AREA ||i.OLED_Init||, CODE, READONLY, ALIGN=1

                  OLED_Init PROC
;;;270      */
;;;271    void OLED_Init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;272    {
;;;273    	uint32_t i, j;
;;;274    	
;;;275    	for (i = 0; i < 1000; i++)			//上电延时
000002  2400              MOVS     r4,#0
000004  e006              B        |L6.20|
                  |L6.6|
;;;276    	{
;;;277    		for (j = 0; j < 1000; j++);
000006  2500              MOVS     r5,#0
000008  e000              B        |L6.12|
                  |L6.10|
00000a  1c6d              ADDS     r5,r5,#1
                  |L6.12|
00000c  f5b57f7a          CMP      r5,#0x3e8
000010  d3fb              BCC      |L6.10|
000012  1c64              ADDS     r4,r4,#1              ;275
                  |L6.20|
000014  f5b47f7a          CMP      r4,#0x3e8             ;275
000018  d3f5              BCC      |L6.6|
;;;278    	}
;;;279    	
;;;280    	OLED_I2C_Init();			//端口初始化
00001a  f7fffffe          BL       OLED_I2C_Init
;;;281    	
;;;282    	OLED_WriteCommand(0xAE);	//关闭显示
00001e  20ae              MOVS     r0,#0xae
000020  f7fffffe          BL       OLED_WriteCommand
;;;283    	
;;;284    	OLED_WriteCommand(0xD5);	//设置显示时钟分频比/振荡器频率
000024  20d5              MOVS     r0,#0xd5
000026  f7fffffe          BL       OLED_WriteCommand
;;;285    	OLED_WriteCommand(0x80);
00002a  2080              MOVS     r0,#0x80
00002c  f7fffffe          BL       OLED_WriteCommand
;;;286    	
;;;287    	OLED_WriteCommand(0xA8);	//设置多路复用率
000030  20a8              MOVS     r0,#0xa8
000032  f7fffffe          BL       OLED_WriteCommand
;;;288    	OLED_WriteCommand(0x3F);
000036  203f              MOVS     r0,#0x3f
000038  f7fffffe          BL       OLED_WriteCommand
;;;289    	
;;;290    	OLED_WriteCommand(0xD3);	//设置显示偏移
00003c  20d3              MOVS     r0,#0xd3
00003e  f7fffffe          BL       OLED_WriteCommand
;;;291    	OLED_WriteCommand(0x00);
000042  2000              MOVS     r0,#0
000044  f7fffffe          BL       OLED_WriteCommand
;;;292    	
;;;293    	OLED_WriteCommand(0x40);	//设置显示开始行
000048  2040              MOVS     r0,#0x40
00004a  f7fffffe          BL       OLED_WriteCommand
;;;294    	
;;;295    	OLED_WriteCommand(0xA1);	//设置左右方向，0xA1正常 0xA0左右反置
00004e  20a1              MOVS     r0,#0xa1
000050  f7fffffe          BL       OLED_WriteCommand
;;;296    	
;;;297    	OLED_WriteCommand(0xC8);	//设置上下方向，0xC8正常 0xC0上下反置
000054  20c8              MOVS     r0,#0xc8
000056  f7fffffe          BL       OLED_WriteCommand
;;;298    
;;;299    	OLED_WriteCommand(0xDA);	//设置COM引脚硬件配置
00005a  20da              MOVS     r0,#0xda
00005c  f7fffffe          BL       OLED_WriteCommand
;;;300    	OLED_WriteCommand(0x12);
000060  2012              MOVS     r0,#0x12
000062  f7fffffe          BL       OLED_WriteCommand
;;;301    	
;;;302    	OLED_WriteCommand(0x81);	//设置对比度控制
000066  2081              MOVS     r0,#0x81
000068  f7fffffe          BL       OLED_WriteCommand
;;;303    	OLED_WriteCommand(0xCF);
00006c  20cf              MOVS     r0,#0xcf
00006e  f7fffffe          BL       OLED_WriteCommand
;;;304    
;;;305    	OLED_WriteCommand(0xD9);	//设置预充电周期
000072  20d9              MOVS     r0,#0xd9
000074  f7fffffe          BL       OLED_WriteCommand
;;;306    	OLED_WriteCommand(0xF1);
000078  20f1              MOVS     r0,#0xf1
00007a  f7fffffe          BL       OLED_WriteCommand
;;;307    
;;;308    	OLED_WriteCommand(0xDB);	//设置VCOMH取消选择级别
00007e  20db              MOVS     r0,#0xdb
000080  f7fffffe          BL       OLED_WriteCommand
;;;309    	OLED_WriteCommand(0x30);
000084  2030              MOVS     r0,#0x30
000086  f7fffffe          BL       OLED_WriteCommand
;;;310    
;;;311    	OLED_WriteCommand(0xA4);	//设置整个显示打开/关闭
00008a  20a4              MOVS     r0,#0xa4
00008c  f7fffffe          BL       OLED_WriteCommand
;;;312    
;;;313    	OLED_WriteCommand(0xA6);	//设置正常/倒转显示
000090  20a6              MOVS     r0,#0xa6
000092  f7fffffe          BL       OLED_WriteCommand
;;;314    
;;;315    	OLED_WriteCommand(0x8D);	//设置充电泵
000096  208d              MOVS     r0,#0x8d
000098  f7fffffe          BL       OLED_WriteCommand
;;;316    	OLED_WriteCommand(0x14);
00009c  2014              MOVS     r0,#0x14
00009e  f7fffffe          BL       OLED_WriteCommand
;;;317    
;;;318    	OLED_WriteCommand(0xAF);	//开启显示
0000a2  20af              MOVS     r0,#0xaf
0000a4  f7fffffe          BL       OLED_WriteCommand
;;;319    		
;;;320    	OLED_Clear();				//OLED清屏
0000a8  f7fffffe          BL       OLED_Clear
;;;321    }
0000ac  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.OLED_Pow||, CODE, READONLY, ALIGN=1

                  OLED_Pow PROC
;;;168      */
;;;169    uint32_t OLED_Pow(uint32_t X, uint32_t Y)
000000  b510              PUSH     {r4,lr}
;;;170    {
000002  4602              MOV      r2,r0
;;;171    	uint32_t Result = 1;
000004  2001              MOVS     r0,#1
;;;172    	while (Y--)
000006  e000              B        |L7.10|
                  |L7.8|
;;;173    	{
;;;174    		Result *= X;
000008  4350              MULS     r0,r2,r0
                  |L7.10|
00000a  1e0b              SUBS     r3,r1,#0              ;172
00000c  f1a10101          SUB      r1,r1,#1              ;172
000010  d1fa              BNE      |L7.8|
;;;175    	}
;;;176    	return Result;
;;;177    }
000012  bd10              POP      {r4,pc}
;;;178    
                          ENDP


                          AREA ||i.OLED_SetCursor||, CODE, READONLY, ALIGN=1

                  OLED_SetCursor PROC
;;;101      */
;;;102    void OLED_SetCursor(uint8_t Y, uint8_t X)
000000  b570              PUSH     {r4-r6,lr}
;;;103    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;104    	OLED_WriteCommand(0xB0 | Y);					//设置Y位置
000006  f04500b0          ORR      r0,r5,#0xb0
00000a  f7fffffe          BL       OLED_WriteCommand
;;;105    	OLED_WriteCommand(0x10 | ((X & 0xF0) >> 4));	//设置X位置高4位
00000e  2110              MOVS     r1,#0x10
000010  ea411014          ORR      r0,r1,r4,LSR #4
000014  f7fffffe          BL       OLED_WriteCommand
;;;106    	OLED_WriteCommand(0x00 | (X & 0x0F));			//设置X位置低4位
000018  f004000f          AND      r0,r4,#0xf
00001c  f7fffffe          BL       OLED_WriteCommand
;;;107    }
000020  bd70              POP      {r4-r6,pc}
;;;108    
                          ENDP


                          AREA ||i.OLED_ShowBinNum||, CODE, READONLY, ALIGN=1

                  OLED_ShowBinNum PROC
;;;256      */
;;;257    void OLED_ShowBinNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;258    {
000004  4680              MOV      r8,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  461d              MOV      r5,r3
;;;259    	uint8_t i;
;;;260    	for (i = 0; i < Length; i++)							
00000c  2400              MOVS     r4,#0
00000e  e012              B        |L9.54|
                  |L9.16|
;;;261    	{
;;;262    		OLED_ShowChar(Line, Column + i, Number / OLED_Pow(2, Length - i - 1) % 2 + '0');
000010  1b28              SUBS     r0,r5,r4
000012  1e41              SUBS     r1,r0,#1
000014  2002              MOVS     r0,#2
000016  f7fffffe          BL       OLED_Pow
00001a  fbb7f0f0          UDIV     r0,r7,r0
00001e  f0000001          AND      r0,r0,#1
000022  f1000930          ADD      r9,r0,#0x30
000026  1930              ADDS     r0,r6,r4
000028  b2c1              UXTB     r1,r0
00002a  464a              MOV      r2,r9
00002c  4640              MOV      r0,r8
00002e  f7fffffe          BL       OLED_ShowChar
000032  1c60              ADDS     r0,r4,#1              ;260
000034  b2c4              UXTB     r4,r0                 ;260
                  |L9.54|
000036  42ac              CMP      r4,r5                 ;260
000038  dbea              BLT      |L9.16|
;;;263    	}
;;;264    }
00003a  e8bd87f0          POP      {r4-r10,pc}
;;;265    
                          ENDP


                          AREA ||i.OLED_ShowChar||, CODE, READONLY, ALIGN=2

                  OLED_ShowChar PROC
;;;133      */
;;;134    void OLED_ShowChar(uint8_t Line, uint8_t Column, char Char)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;135    {      	
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;136    	uint8_t i;
;;;137    	OLED_SetCursor((Line - 1) * 2, (Column - 1) * 8);		//设置光标位置在上半部分
00000a  1e72              SUBS     r2,r6,#1
00000c  06d2              LSLS     r2,r2,#27
00000e  0e11              LSRS     r1,r2,#24
000010  1e6a              SUBS     r2,r5,#1
000012  0652              LSLS     r2,r2,#25
000014  0e10              LSRS     r0,r2,#24
000016  f7fffffe          BL       OLED_SetCursor
;;;138    	for (i = 0; i < 8; i++)
00001a  2400              MOVS     r4,#0
00001c  e009              B        |L10.50|
                  |L10.30|
;;;139    	{
;;;140    		OLED_WriteData(OLED_F8x16[Char - ' '][i]);			//显示上半部分内容
00001e  f1a70120          SUB      r1,r7,#0x20
000022  4a13              LDR      r2,|L10.112|
000024  eb021101          ADD      r1,r2,r1,LSL #4
000028  5d08              LDRB     r0,[r1,r4]
00002a  f7fffffe          BL       OLED_WriteData
00002e  1c60              ADDS     r0,r4,#1              ;138
000030  b2c4              UXTB     r4,r0                 ;138
                  |L10.50|
000032  2c08              CMP      r4,#8                 ;138
000034  dbf3              BLT      |L10.30|
;;;141    	}
;;;142    	OLED_SetCursor((Line - 1) * 2 + 1, (Column - 1) * 8);	//设置光标位置在下半部分
000036  1e72              SUBS     r2,r6,#1
000038  06d2              LSLS     r2,r2,#27
00003a  0e11              LSRS     r1,r2,#24
00003c  1e6a              SUBS     r2,r5,#1
00003e  2301              MOVS     r3,#1
000040  eb030242          ADD      r2,r3,r2,LSL #1
000044  b2d0              UXTB     r0,r2
000046  f7fffffe          BL       OLED_SetCursor
;;;143    	for (i = 0; i < 8; i++)
00004a  2400              MOVS     r4,#0
00004c  e00b              B        |L10.102|
                  |L10.78|
;;;144    	{
;;;145    		OLED_WriteData(OLED_F8x16[Char - ' '][i + 8]);		//显示下半部分内容
00004e  f1a70120          SUB      r1,r7,#0x20
000052  4a07              LDR      r2,|L10.112|
000054  eb021201          ADD      r2,r2,r1,LSL #4
000058  f1040108          ADD      r1,r4,#8
00005c  5c50              LDRB     r0,[r2,r1]
00005e  f7fffffe          BL       OLED_WriteData
000062  1c60              ADDS     r0,r4,#1              ;143
000064  b2c4              UXTB     r4,r0                 ;143
                  |L10.102|
000066  2c08              CMP      r4,#8                 ;143
000068  dbf1              BLT      |L10.78|
;;;146    	}
;;;147    }
00006a  e8bd81f0          POP      {r4-r8,pc}
;;;148    
                          ENDP

00006e  0000              DCW      0x0000
                  |L10.112|
                          DCD      OLED_F8x16

                          AREA ||i.OLED_ShowHexNum||, CODE, READONLY, ALIGN=1

                  OLED_ShowHexNum PROC
;;;231      */
;;;232    void OLED_ShowHexNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;233    {
000004  4681              MOV      r9,r0
000006  460e              MOV      r6,r1
000008  4690              MOV      r8,r2
00000a  461f              MOV      r7,r3
;;;234    	uint8_t i, SingleNumber;
;;;235    	for (i = 0; i < Length; i++)							
00000c  2400              MOVS     r4,#0
00000e  e01d              B        |L11.76|
                  |L11.16|
;;;236    	{
;;;237    		SingleNumber = Number / OLED_Pow(16, Length - i - 1) % 16;
000010  1b38              SUBS     r0,r7,r4
000012  1e41              SUBS     r1,r0,#1
000014  2010              MOVS     r0,#0x10
000016  f7fffffe          BL       OLED_Pow
00001a  fbb8f0f0          UDIV     r0,r8,r0
00001e  f000050f          AND      r5,r0,#0xf
;;;238    		if (SingleNumber < 10)
000022  2d0a              CMP      r5,#0xa
000024  da08              BGE      |L11.56|
;;;239    		{
;;;240    			OLED_ShowChar(Line, Column + i, SingleNumber + '0');
000026  f1050030          ADD      r0,r5,#0x30
00002a  b2c2              UXTB     r2,r0
00002c  1930              ADDS     r0,r6,r4
00002e  b2c1              UXTB     r1,r0
000030  4648              MOV      r0,r9
000032  f7fffffe          BL       OLED_ShowChar
000036  e007              B        |L11.72|
                  |L11.56|
;;;241    		}
;;;242    		else
;;;243    		{
;;;244    			OLED_ShowChar(Line, Column + i, SingleNumber - 10 + 'A');
000038  f1050037          ADD      r0,r5,#0x37
00003c  b2c2              UXTB     r2,r0
00003e  1930              ADDS     r0,r6,r4
000040  b2c1              UXTB     r1,r0
000042  4648              MOV      r0,r9
000044  f7fffffe          BL       OLED_ShowChar
                  |L11.72|
000048  1c60              ADDS     r0,r4,#1              ;235
00004a  b2c4              UXTB     r4,r0                 ;235
                  |L11.76|
00004c  42bc              CMP      r4,r7                 ;235
00004e  dbdf              BLT      |L11.16|
;;;245    		}
;;;246    	}
;;;247    }
000050  e8bd87f0          POP      {r4-r10,pc}
;;;248    
                          ENDP


                          AREA ||i.OLED_ShowNum||, CODE, READONLY, ALIGN=1

                  OLED_ShowNum PROC
;;;186      */
;;;187    void OLED_ShowNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;188    {
000004  4680              MOV      r8,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  461d              MOV      r5,r3
;;;189    	uint8_t i;
;;;190    	for (i = 0; i < Length; i++)							
00000c  2400              MOVS     r4,#0
00000e  e015              B        |L12.60|
                  |L12.16|
;;;191    	{
;;;192    		OLED_ShowChar(Line, Column + i, Number / OLED_Pow(10, Length - i - 1) % 10 + '0');
000010  1b28              SUBS     r0,r5,r4
000012  1e41              SUBS     r1,r0,#1
000014  200a              MOVS     r0,#0xa
000016  f7fffffe          BL       OLED_Pow
00001a  fbb7f0f0          UDIV     r0,r7,r0
00001e  210a              MOVS     r1,#0xa
000020  fbb0f2f1          UDIV     r2,r0,r1
000024  fb010012          MLS      r0,r1,r2,r0
000028  f1000930          ADD      r9,r0,#0x30
00002c  1930              ADDS     r0,r6,r4
00002e  b2c1              UXTB     r1,r0
000030  464a              MOV      r2,r9
000032  4640              MOV      r0,r8
000034  f7fffffe          BL       OLED_ShowChar
000038  1c60              ADDS     r0,r4,#1              ;190
00003a  b2c4              UXTB     r4,r0                 ;190
                  |L12.60|
00003c  42ac              CMP      r4,r5                 ;190
00003e  dbe7              BLT      |L12.16|
;;;193    	}
;;;194    }
000040  e8bd87f0          POP      {r4-r10,pc}
;;;195    
                          ENDP


                          AREA ||i.OLED_ShowSignedNum||, CODE, READONLY, ALIGN=1

                  OLED_ShowSignedNum PROC
;;;203      */
;;;204    void OLED_ShowSignedNum(uint8_t Line, uint8_t Column, int32_t Number, uint8_t Length)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;205    {
000004  4681              MOV      r9,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
;;;206    	uint8_t i;
;;;207    	uint32_t Number1;
;;;208    	if (Number >= 0)
00000c  2d00              CMP      r5,#0
00000e  db06              BLT      |L13.30|
;;;209    	{
;;;210    		OLED_ShowChar(Line, Column, '+');
000010  222b              MOVS     r2,#0x2b
000012  4641              MOV      r1,r8
000014  4648              MOV      r0,r9
000016  f7fffffe          BL       OLED_ShowChar
;;;211    		Number1 = Number;
00001a  462f              MOV      r7,r5
00001c  e005              B        |L13.42|
                  |L13.30|
;;;212    	}
;;;213    	else
;;;214    	{
;;;215    		OLED_ShowChar(Line, Column, '-');
00001e  222d              MOVS     r2,#0x2d
000020  4641              MOV      r1,r8
000022  4648              MOV      r0,r9
000024  f7fffffe          BL       OLED_ShowChar
;;;216    		Number1 = -Number;
000028  426f              RSBS     r7,r5,#0
                  |L13.42|
;;;217    	}
;;;218    	for (i = 0; i < Length; i++)							
00002a  2400              MOVS     r4,#0
00002c  e017              B        |L13.94|
                  |L13.46|
;;;219    	{
;;;220    		OLED_ShowChar(Line, Column + i + 1, Number1 / OLED_Pow(10, Length - i - 1) % 10 + '0');
00002e  1b30              SUBS     r0,r6,r4
000030  1e41              SUBS     r1,r0,#1
000032  200a              MOVS     r0,#0xa
000034  f7fffffe          BL       OLED_Pow
000038  fbb7f0f0          UDIV     r0,r7,r0
00003c  210a              MOVS     r1,#0xa
00003e  fbb0f2f1          UDIV     r2,r0,r1
000042  fb010012          MLS      r0,r1,r2,r0
000046  f1000a30          ADD      r10,r0,#0x30
00004a  eb080004          ADD      r0,r8,r4
00004e  1c40              ADDS     r0,r0,#1
000050  b2c1              UXTB     r1,r0
000052  4652              MOV      r2,r10
000054  4648              MOV      r0,r9
000056  f7fffffe          BL       OLED_ShowChar
00005a  1c60              ADDS     r0,r4,#1              ;218
00005c  b2c4              UXTB     r4,r0                 ;218
                  |L13.94|
00005e  42b4              CMP      r4,r6                 ;218
000060  dbe5              BLT      |L13.46|
;;;221    	}
;;;222    }
000062  e8bd87f0          POP      {r4-r10,pc}
;;;223    
                          ENDP


                          AREA ||i.OLED_ShowString||, CODE, READONLY, ALIGN=1

                  OLED_ShowString PROC
;;;155      */
;;;156    void OLED_ShowString(uint8_t Line, uint8_t Column, char *String)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;157    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
;;;158    	uint8_t i;
;;;159    	for (i = 0; String[i] != '\0'; i++)
00000a  2400              MOVS     r4,#0
00000c  e007              B        |L14.30|
                  |L14.14|
;;;160    	{
;;;161    		OLED_ShowChar(Line, Column + i, String[i]);
00000e  5d2a              LDRB     r2,[r5,r4]
000010  1930              ADDS     r0,r6,r4
000012  b2c1              UXTB     r1,r0
000014  4638              MOV      r0,r7
000016  f7fffffe          BL       OLED_ShowChar
00001a  1c60              ADDS     r0,r4,#1              ;159
00001c  b2c4              UXTB     r4,r0                 ;159
                  |L14.30|
00001e  5d28              LDRB     r0,[r5,r4]            ;159
000020  2800              CMP      r0,#0                 ;159
000022  d1f4              BNE      |L14.14|
;;;162    	}
;;;163    }
000024  e8bd81f0          POP      {r4-r8,pc}
;;;164    
                          ENDP


                          AREA ||i.OLED_WriteCommand||, CODE, READONLY, ALIGN=1

                  OLED_WriteCommand PROC
;;;72       */
;;;73     void OLED_WriteCommand(uint8_t Command)
000000  b510              PUSH     {r4,lr}
;;;74     {
000002  4604              MOV      r4,r0
;;;75     	OLED_I2C_Start();
000004  f7fffffe          BL       OLED_I2C_Start
;;;76     	OLED_I2C_SendByte(0x78);		//从机地址
000008  2078              MOVS     r0,#0x78
00000a  f7fffffe          BL       OLED_I2C_SendByte
;;;77     	OLED_I2C_SendByte(0x00);		//写命令
00000e  2000              MOVS     r0,#0
000010  f7fffffe          BL       OLED_I2C_SendByte
;;;78     	OLED_I2C_SendByte(Command); 
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       OLED_I2C_SendByte
;;;79     	OLED_I2C_Stop();
00001a  f7fffffe          BL       OLED_I2C_Stop
;;;80     }
00001e  bd10              POP      {r4,pc}
;;;81     
                          ENDP


                          AREA ||i.OLED_WriteData||, CODE, READONLY, ALIGN=1

                  OLED_WriteData PROC
;;;86       */
;;;87     void OLED_WriteData(uint8_t Data)
000000  b510              PUSH     {r4,lr}
;;;88     {
000002  4604              MOV      r4,r0
;;;89     	OLED_I2C_Start();
000004  f7fffffe          BL       OLED_I2C_Start
;;;90     	OLED_I2C_SendByte(0x78);		//从机地址
000008  2078              MOVS     r0,#0x78
00000a  f7fffffe          BL       OLED_I2C_SendByte
;;;91     	OLED_I2C_SendByte(0x40);		//写数据
00000e  2040              MOVS     r0,#0x40
000010  f7fffffe          BL       OLED_I2C_SendByte
;;;92     	OLED_I2C_SendByte(Data);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       OLED_I2C_SendByte
;;;93     	OLED_I2C_Stop();
00001a  f7fffffe          BL       OLED_I2C_Stop
;;;94     }
00001e  bd10              POP      {r4,pc}
;;;95     
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  OLED_F8x16
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  00000000          DCB      0x00,0x00,0x00,0x00
000010  000000f8          DCB      0x00,0x00,0x00,0xf8
000014  00000000          DCB      0x00,0x00,0x00,0x00
000018  00000033          DCB      0x00,0x00,0x00,0x33
00001c  30000000          DCB      0x30,0x00,0x00,0x00
000020  00100c06          DCB      0x00,0x10,0x0c,0x06
000024  100c0600          DCB      0x10,0x0c,0x06,0x00
000028  00000000          DCB      0x00,0x00,0x00,0x00
00002c  00000000          DCB      0x00,0x00,0x00,0x00
000030  40c07840          DCB      0x40,0xc0,0x78,0x40
000034  c0784000          DCB      0xc0,0x78,0x40,0x00
000038  043f0404          DCB      0x04,0x3f,0x04,0x04
00003c  3f040400          DCB      0x3f,0x04,0x04,0x00
000040  007088fc          DCB      0x00,0x70,0x88,0xfc
000044  08300000          DCB      0x08,0x30,0x00,0x00
000048  001820ff          DCB      0x00,0x18,0x20,0xff
00004c  211e0000          DCB      0x21,0x1e,0x00,0x00
000050  f008f000          DCB      0xf0,0x08,0xf0,0x00
000054  e0180000          DCB      0xe0,0x18,0x00,0x00
000058  00211c03          DCB      0x00,0x21,0x1c,0x03
00005c  1e211e00          DCB      0x1e,0x21,0x1e,0x00
000060  00f00888          DCB      0x00,0xf0,0x08,0x88
000064  70000000          DCB      0x70,0x00,0x00,0x00
000068  1e212324          DCB      0x1e,0x21,0x23,0x24
00006c  19272110          DCB      0x19,0x27,0x21,0x10
000070  10160e00          DCB      0x10,0x16,0x0e,0x00
000074  00000000          DCB      0x00,0x00,0x00,0x00
000078  00000000          DCB      0x00,0x00,0x00,0x00
00007c  00000000          DCB      0x00,0x00,0x00,0x00
000080  000000e0          DCB      0x00,0x00,0x00,0xe0
000084  18040200          DCB      0x18,0x04,0x02,0x00
000088  00000007          DCB      0x00,0x00,0x00,0x07
00008c  18204000          DCB      0x18,0x20,0x40,0x00
000090  00020418          DCB      0x00,0x02,0x04,0x18
000094  e0000000          DCB      0xe0,0x00,0x00,0x00
000098  00402018          DCB      0x00,0x40,0x20,0x18
00009c  07000000          DCB      0x07,0x00,0x00,0x00
0000a0  404080f0          DCB      0x40,0x40,0x80,0xf0
0000a4  80404000          DCB      0x80,0x40,0x40,0x00
0000a8  0202010f          DCB      0x02,0x02,0x01,0x0f
0000ac  01020200          DCB      0x01,0x02,0x02,0x00
0000b0  000000f0          DCB      0x00,0x00,0x00,0xf0
0000b4  00000000          DCB      0x00,0x00,0x00,0x00
0000b8  0101011f          DCB      0x01,0x01,0x01,0x1f
0000bc  01010100          DCB      0x01,0x01,0x01,0x00
0000c0  00000000          DCB      0x00,0x00,0x00,0x00
0000c4  00000000          DCB      0x00,0x00,0x00,0x00
0000c8  80b07000          DCB      0x80,0xb0,0x70,0x00
0000cc  00000000          DCB      0x00,0x00,0x00,0x00
0000d0  00000000          DCB      0x00,0x00,0x00,0x00
0000d4  00000000          DCB      0x00,0x00,0x00,0x00
0000d8  00010101          DCB      0x00,0x01,0x01,0x01
0000dc  01010101          DCB      0x01,0x01,0x01,0x01
0000e0  00000000          DCB      0x00,0x00,0x00,0x00
0000e4  00000000          DCB      0x00,0x00,0x00,0x00
0000e8  00303000          DCB      0x00,0x30,0x30,0x00
0000ec  00000000          DCB      0x00,0x00,0x00,0x00
0000f0  00000000          DCB      0x00,0x00,0x00,0x00
0000f4  80601804          DCB      0x80,0x60,0x18,0x04
0000f8  00601806          DCB      0x00,0x60,0x18,0x06
0000fc  01000000          DCB      0x01,0x00,0x00,0x00
000100  00e01008          DCB      0x00,0xe0,0x10,0x08
000104  0810e000          DCB      0x08,0x10,0xe0,0x00
000108  000f1020          DCB      0x00,0x0f,0x10,0x20
00010c  20100f00          DCB      0x20,0x10,0x0f,0x00
000110  001010f8          DCB      0x00,0x10,0x10,0xf8
000114  00000000          DCB      0x00,0x00,0x00,0x00
000118  0020203f          DCB      0x00,0x20,0x20,0x3f
00011c  20200000          DCB      0x20,0x20,0x00,0x00
000120  00700808          DCB      0x00,0x70,0x08,0x08
000124  08887000          DCB      0x08,0x88,0x70,0x00
000128  00302824          DCB      0x00,0x30,0x28,0x24
00012c  22213000          DCB      0x22,0x21,0x30,0x00
000130  00300888          DCB      0x00,0x30,0x08,0x88
000134  88483000          DCB      0x88,0x48,0x30,0x00
000138  00182020          DCB      0x00,0x18,0x20,0x20
00013c  20110e00          DCB      0x20,0x11,0x0e,0x00
000140  0000c020          DCB      0x00,0x00,0xc0,0x20
000144  10f80000          DCB      0x10,0xf8,0x00,0x00
000148  00070424          DCB      0x00,0x07,0x04,0x24
00014c  243f2400          DCB      0x24,0x3f,0x24,0x00
000150  00f80888          DCB      0x00,0xf8,0x08,0x88
000154  88080800          DCB      0x88,0x08,0x08,0x00
000158  00192120          DCB      0x00,0x19,0x21,0x20
00015c  20110e00          DCB      0x20,0x11,0x0e,0x00
000160  00e01088          DCB      0x00,0xe0,0x10,0x88
000164  88180000          DCB      0x88,0x18,0x00,0x00
000168  000f1120          DCB      0x00,0x0f,0x11,0x20
00016c  20110e00          DCB      0x20,0x11,0x0e,0x00
000170  00380808          DCB      0x00,0x38,0x08,0x08
000174  c8380800          DCB      0xc8,0x38,0x08,0x00
000178  0000003f          DCB      0x00,0x00,0x00,0x3f
00017c  00000000          DCB      0x00,0x00,0x00,0x00
000180  00708808          DCB      0x00,0x70,0x88,0x08
000184  08887000          DCB      0x08,0x88,0x70,0x00
000188  001c2221          DCB      0x00,0x1c,0x22,0x21
00018c  21221c00          DCB      0x21,0x22,0x1c,0x00
000190  00e01008          DCB      0x00,0xe0,0x10,0x08
000194  0810e000          DCB      0x08,0x10,0xe0,0x00
000198  00003122          DCB      0x00,0x00,0x31,0x22
00019c  22110f00          DCB      0x22,0x11,0x0f,0x00
0001a0  000000c0          DCB      0x00,0x00,0x00,0xc0
0001a4  c0000000          DCB      0xc0,0x00,0x00,0x00
0001a8  00000030          DCB      0x00,0x00,0x00,0x30
0001ac  30000000          DCB      0x30,0x00,0x00,0x00
0001b0  00000080          DCB      0x00,0x00,0x00,0x80
0001b4  00000000          DCB      0x00,0x00,0x00,0x00
0001b8  00008060          DCB      0x00,0x00,0x80,0x60
0001bc  00000000          DCB      0x00,0x00,0x00,0x00
0001c0  00008040          DCB      0x00,0x00,0x80,0x40
0001c4  20100800          DCB      0x20,0x10,0x08,0x00
0001c8  00010204          DCB      0x00,0x01,0x02,0x04
0001cc  08102000          DCB      0x08,0x10,0x20,0x00
0001d0  40404040          DCB      0x40,0x40,0x40,0x40
0001d4  40404000          DCB      0x40,0x40,0x40,0x00
0001d8  04040404          DCB      0x04,0x04,0x04,0x04
0001dc  04040400          DCB      0x04,0x04,0x04,0x00
0001e0  00081020          DCB      0x00,0x08,0x10,0x20
0001e4  40800000          DCB      0x40,0x80,0x00,0x00
0001e8  00201008          DCB      0x00,0x20,0x10,0x08
0001ec  04020100          DCB      0x04,0x02,0x01,0x00
0001f0  00704808          DCB      0x00,0x70,0x48,0x08
0001f4  0808f000          DCB      0x08,0x08,0xf0,0x00
0001f8  00000030          DCB      0x00,0x00,0x00,0x30
0001fc  36010000          DCB      0x36,0x01,0x00,0x00
000200  c030c828          DCB      0xc0,0x30,0xc8,0x28
000204  e810e000          DCB      0xe8,0x10,0xe0,0x00
000208  07182724          DCB      0x07,0x18,0x27,0x24
00020c  23140b00          DCB      0x23,0x14,0x0b,0x00
000210  0000c038          DCB      0x00,0x00,0xc0,0x38
000214  e0000000          DCB      0xe0,0x00,0x00,0x00
000218  203c2302          DCB      0x20,0x3c,0x23,0x02
00021c  02273820          DCB      0x02,0x27,0x38,0x20
000220  08f88888          DCB      0x08,0xf8,0x88,0x88
000224  88700000          DCB      0x88,0x70,0x00,0x00
000228  203f2020          DCB      0x20,0x3f,0x20,0x20
00022c  20110e00          DCB      0x20,0x11,0x0e,0x00
000230  c0300808          DCB      0xc0,0x30,0x08,0x08
000234  08083800          DCB      0x08,0x08,0x38,0x00
000238  07182020          DCB      0x07,0x18,0x20,0x20
00023c  20100800          DCB      0x20,0x10,0x08,0x00
000240  08f80808          DCB      0x08,0xf8,0x08,0x08
000244  0810e000          DCB      0x08,0x10,0xe0,0x00
000248  203f2020          DCB      0x20,0x3f,0x20,0x20
00024c  20100f00          DCB      0x20,0x10,0x0f,0x00
000250  08f88888          DCB      0x08,0xf8,0x88,0x88
000254  e8081000          DCB      0xe8,0x08,0x10,0x00
000258  203f2020          DCB      0x20,0x3f,0x20,0x20
00025c  23201800          DCB      0x23,0x20,0x18,0x00
000260  08f88888          DCB      0x08,0xf8,0x88,0x88
000264  e8081000          DCB      0xe8,0x08,0x10,0x00
000268  203f2000          DCB      0x20,0x3f,0x20,0x00
00026c  03000000          DCB      0x03,0x00,0x00,0x00
000270  c0300808          DCB      0xc0,0x30,0x08,0x08
000274  08380000          DCB      0x08,0x38,0x00,0x00
000278  07182020          DCB      0x07,0x18,0x20,0x20
00027c  221e0200          DCB      0x22,0x1e,0x02,0x00
000280  08f80800          DCB      0x08,0xf8,0x08,0x00
000284  0008f808          DCB      0x00,0x08,0xf8,0x08
000288  203f2101          DCB      0x20,0x3f,0x21,0x01
00028c  01213f20          DCB      0x01,0x21,0x3f,0x20
000290  000808f8          DCB      0x00,0x08,0x08,0xf8
000294  08080000          DCB      0x08,0x08,0x00,0x00
000298  0020203f          DCB      0x00,0x20,0x20,0x3f
00029c  20200000          DCB      0x20,0x20,0x00,0x00
0002a0  00000808          DCB      0x00,0x00,0x08,0x08
0002a4  f8080800          DCB      0xf8,0x08,0x08,0x00
0002a8  c0808080          DCB      0xc0,0x80,0x80,0x80
0002ac  7f000000          DCB      0x7f,0x00,0x00,0x00
0002b0  08f888c0          DCB      0x08,0xf8,0x88,0xc0
0002b4  28180800          DCB      0x28,0x18,0x08,0x00
0002b8  203f2001          DCB      0x20,0x3f,0x20,0x01
0002bc  26382000          DCB      0x26,0x38,0x20,0x00
0002c0  08f80800          DCB      0x08,0xf8,0x08,0x00
0002c4  00000000          DCB      0x00,0x00,0x00,0x00
0002c8  203f2020          DCB      0x20,0x3f,0x20,0x20
0002cc  20203000          DCB      0x20,0x20,0x30,0x00
0002d0  08f8f800          DCB      0x08,0xf8,0xf8,0x00
0002d4  f8f80800          DCB      0xf8,0xf8,0x08,0x00
0002d8  203f003f          DCB      0x20,0x3f,0x00,0x3f
0002dc  003f2000          DCB      0x00,0x3f,0x20,0x00
0002e0  08f830c0          DCB      0x08,0xf8,0x30,0xc0
0002e4  0008f808          DCB      0x00,0x08,0xf8,0x08
0002e8  203f2000          DCB      0x20,0x3f,0x20,0x00
0002ec  07183f00          DCB      0x07,0x18,0x3f,0x00
0002f0  e0100808          DCB      0xe0,0x10,0x08,0x08
0002f4  0810e000          DCB      0x08,0x10,0xe0,0x00
0002f8  0f102020          DCB      0x0f,0x10,0x20,0x20
0002fc  20100f00          DCB      0x20,0x10,0x0f,0x00
000300  08f80808          DCB      0x08,0xf8,0x08,0x08
000304  0808f000          DCB      0x08,0x08,0xf0,0x00
000308  203f2101          DCB      0x20,0x3f,0x21,0x01
00030c  01010000          DCB      0x01,0x01,0x00,0x00
000310  e0100808          DCB      0xe0,0x10,0x08,0x08
000314  0810e000          DCB      0x08,0x10,0xe0,0x00
000318  0f182424          DCB      0x0f,0x18,0x24,0x24
00031c  38504f00          DCB      0x38,0x50,0x4f,0x00
000320  08f88888          DCB      0x08,0xf8,0x88,0x88
000324  88887000          DCB      0x88,0x88,0x70,0x00
000328  203f2000          DCB      0x20,0x3f,0x20,0x00
00032c  030c3020          DCB      0x03,0x0c,0x30,0x20
000330  00708808          DCB      0x00,0x70,0x88,0x08
000334  08083800          DCB      0x08,0x08,0x38,0x00
000338  00382021          DCB      0x00,0x38,0x20,0x21
00033c  21221c00          DCB      0x21,0x22,0x1c,0x00
000340  180808f8          DCB      0x18,0x08,0x08,0xf8
000344  08081800          DCB      0x08,0x08,0x18,0x00
000348  0000203f          DCB      0x00,0x00,0x20,0x3f
00034c  20000000          DCB      0x20,0x00,0x00,0x00
000350  08f80800          DCB      0x08,0xf8,0x08,0x00
000354  0008f808          DCB      0x00,0x08,0xf8,0x08
000358  001f2020          DCB      0x00,0x1f,0x20,0x20
00035c  20201f00          DCB      0x20,0x20,0x1f,0x00
000360  08788800          DCB      0x08,0x78,0x88,0x00
000364  00c83808          DCB      0x00,0xc8,0x38,0x08
000368  00000738          DCB      0x00,0x00,0x07,0x38
00036c  0e010000          DCB      0x0e,0x01,0x00,0x00
000370  f80800f8          DCB      0xf8,0x08,0x00,0xf8
000374  0008f800          DCB      0x00,0x08,0xf8,0x00
000378  033c0700          DCB      0x03,0x3c,0x07,0x00
00037c  073c0300          DCB      0x07,0x3c,0x03,0x00
000380  08186880          DCB      0x08,0x18,0x68,0x80
000384  80681808          DCB      0x80,0x68,0x18,0x08
000388  20302c03          DCB      0x20,0x30,0x2c,0x03
00038c  032c3020          DCB      0x03,0x2c,0x30,0x20
000390  0838c800          DCB      0x08,0x38,0xc8,0x00
000394  c8380800          DCB      0xc8,0x38,0x08,0x00
000398  0000203f          DCB      0x00,0x00,0x20,0x3f
00039c  20000000          DCB      0x20,0x00,0x00,0x00
0003a0  10080808          DCB      0x10,0x08,0x08,0x08
0003a4  c8380800          DCB      0xc8,0x38,0x08,0x00
0003a8  20382621          DCB      0x20,0x38,0x26,0x21
0003ac  20201800          DCB      0x20,0x20,0x18,0x00
0003b0  000000fe          DCB      0x00,0x00,0x00,0xfe
0003b4  02020200          DCB      0x02,0x02,0x02,0x00
0003b8  0000007f          DCB      0x00,0x00,0x00,0x7f
0003bc  40404000          DCB      0x40,0x40,0x40,0x00
0003c0  000c30c0          DCB      0x00,0x0c,0x30,0xc0
0003c4  00000000          DCB      0x00,0x00,0x00,0x00
0003c8  00000001          DCB      0x00,0x00,0x00,0x01
0003cc  0638c000          DCB      0x06,0x38,0xc0,0x00
0003d0  00020202          DCB      0x00,0x02,0x02,0x02
0003d4  fe000000          DCB      0xfe,0x00,0x00,0x00
0003d8  00404040          DCB      0x00,0x40,0x40,0x40
0003dc  7f000000          DCB      0x7f,0x00,0x00,0x00
0003e0  00000402          DCB      0x00,0x00,0x04,0x02
0003e4  02020400          DCB      0x02,0x02,0x04,0x00
0003e8  00000000          DCB      0x00,0x00,0x00,0x00
0003ec  00000000          DCB      0x00,0x00,0x00,0x00
0003f0  00000000          DCB      0x00,0x00,0x00,0x00
0003f4  00000000          DCB      0x00,0x00,0x00,0x00
0003f8  80808080          DCB      0x80,0x80,0x80,0x80
0003fc  80808080          DCB      0x80,0x80,0x80,0x80
000400  00020204          DCB      0x00,0x02,0x02,0x04
000404  00000000          DCB      0x00,0x00,0x00,0x00
000408  00000000          DCB      0x00,0x00,0x00,0x00
00040c  00000000          DCB      0x00,0x00,0x00,0x00
000410  00008080          DCB      0x00,0x00,0x80,0x80
000414  80800000          DCB      0x80,0x80,0x00,0x00
000418  00192422          DCB      0x00,0x19,0x24,0x22
00041c  22223f20          DCB      0x22,0x22,0x3f,0x20
000420  08f80080          DCB      0x08,0xf8,0x00,0x80
000424  80000000          DCB      0x80,0x00,0x00,0x00
000428  003f1120          DCB      0x00,0x3f,0x11,0x20
00042c  20110e00          DCB      0x20,0x11,0x0e,0x00
000430  00000080          DCB      0x00,0x00,0x00,0x80
000434  80800000          DCB      0x80,0x80,0x00,0x00
000438  000e1120          DCB      0x00,0x0e,0x11,0x20
00043c  20201100          DCB      0x20,0x20,0x11,0x00
000440  00000080          DCB      0x00,0x00,0x00,0x80
000444  8088f800          DCB      0x80,0x88,0xf8,0x00
000448  000e1120          DCB      0x00,0x0e,0x11,0x20
00044c  20103f20          DCB      0x20,0x10,0x3f,0x20
000450  00008080          DCB      0x00,0x00,0x80,0x80
000454  80800000          DCB      0x80,0x80,0x00,0x00
000458  001f2222          DCB      0x00,0x1f,0x22,0x22
00045c  22221300          DCB      0x22,0x22,0x13,0x00
000460  008080f0          DCB      0x00,0x80,0x80,0xf0
000464  88888818          DCB      0x88,0x88,0x88,0x18
000468  0020203f          DCB      0x00,0x20,0x20,0x3f
00046c  20200000          DCB      0x20,0x20,0x00,0x00
000470  00008080          DCB      0x00,0x00,0x80,0x80
000474  80808000          DCB      0x80,0x80,0x80,0x00
000478  006b9494          DCB      0x00,0x6b,0x94,0x94
00047c  94936000          DCB      0x94,0x93,0x60,0x00
000480  08f80080          DCB      0x08,0xf8,0x00,0x80
000484  80800000          DCB      0x80,0x80,0x00,0x00
000488  203f2100          DCB      0x20,0x3f,0x21,0x00
00048c  00203f20          DCB      0x00,0x20,0x3f,0x20
000490  00809898          DCB      0x00,0x80,0x98,0x98
000494  00000000          DCB      0x00,0x00,0x00,0x00
000498  0020203f          DCB      0x00,0x20,0x20,0x3f
00049c  20200000          DCB      0x20,0x20,0x00,0x00
0004a0  00000080          DCB      0x00,0x00,0x00,0x80
0004a4  98980000          DCB      0x98,0x98,0x00,0x00
0004a8  00c08080          DCB      0x00,0xc0,0x80,0x80
0004ac  807f0000          DCB      0x80,0x7f,0x00,0x00
0004b0  08f80000          DCB      0x08,0xf8,0x00,0x00
0004b4  80808000          DCB      0x80,0x80,0x80,0x00
0004b8  203f2402          DCB      0x20,0x3f,0x24,0x02
0004bc  2d302000          DCB      0x2d,0x30,0x20,0x00
0004c0  000808f8          DCB      0x00,0x08,0x08,0xf8
0004c4  00000000          DCB      0x00,0x00,0x00,0x00
0004c8  0020203f          DCB      0x00,0x20,0x20,0x3f
0004cc  20200000          DCB      0x20,0x20,0x00,0x00
0004d0  80808080          DCB      0x80,0x80,0x80,0x80
0004d4  80808000          DCB      0x80,0x80,0x80,0x00
0004d8  203f2000          DCB      0x20,0x3f,0x20,0x00
0004dc  3f20003f          DCB      0x3f,0x20,0x00,0x3f
0004e0  80800080          DCB      0x80,0x80,0x00,0x80
0004e4  80800000          DCB      0x80,0x80,0x00,0x00
0004e8  203f2100          DCB      0x20,0x3f,0x21,0x00
0004ec  00203f20          DCB      0x00,0x20,0x3f,0x20
0004f0  00008080          DCB      0x00,0x00,0x80,0x80
0004f4  80800000          DCB      0x80,0x80,0x00,0x00
0004f8  001f2020          DCB      0x00,0x1f,0x20,0x20
0004fc  20201f00          DCB      0x20,0x20,0x1f,0x00
000500  80800080          DCB      0x80,0x80,0x00,0x80
000504  80000000          DCB      0x80,0x00,0x00,0x00
000508  80ffa120          DCB      0x80,0xff,0xa1,0x20
00050c  20110e00          DCB      0x20,0x11,0x0e,0x00
000510  00000080          DCB      0x00,0x00,0x00,0x80
000514  80808000          DCB      0x80,0x80,0x80,0x00
000518  000e1120          DCB      0x00,0x0e,0x11,0x20
00051c  20a0ff80          DCB      0x20,0xa0,0xff,0x80
000520  80808000          DCB      0x80,0x80,0x80,0x00
000524  80808000          DCB      0x80,0x80,0x80,0x00
000528  20203f21          DCB      0x20,0x20,0x3f,0x21
00052c  20000100          DCB      0x20,0x00,0x01,0x00
000530  00008080          DCB      0x00,0x00,0x80,0x80
000534  80808000          DCB      0x80,0x80,0x80,0x00
000538  00332424          DCB      0x00,0x33,0x24,0x24
00053c  24241900          DCB      0x24,0x24,0x19,0x00
000540  008080e0          DCB      0x00,0x80,0x80,0xe0
000544  80800000          DCB      0x80,0x80,0x00,0x00
000548  0000001f          DCB      0x00,0x00,0x00,0x1f
00054c  20200000          DCB      0x20,0x20,0x00,0x00
000550  80800000          DCB      0x80,0x80,0x00,0x00
000554  00808000          DCB      0x00,0x80,0x80,0x00
000558  001f2020          DCB      0x00,0x1f,0x20,0x20
00055c  20103f20          DCB      0x20,0x10,0x3f,0x20
000560  80808000          DCB      0x80,0x80,0x80,0x00
000564  00808080          DCB      0x00,0x80,0x80,0x80
000568  00010e30          DCB      0x00,0x01,0x0e,0x30
00056c  08060100          DCB      0x08,0x06,0x01,0x00
000570  80800080          DCB      0x80,0x80,0x00,0x80
000574  00808080          DCB      0x00,0x80,0x80,0x80
000578  0f300c03          DCB      0x0f,0x30,0x0c,0x03
00057c  0c300f00          DCB      0x0c,0x30,0x0f,0x00
000580  00808000          DCB      0x00,0x80,0x80,0x00
000584  80808000          DCB      0x80,0x80,0x80,0x00
000588  0020312e          DCB      0x00,0x20,0x31,0x2e
00058c  0e312000          DCB      0x0e,0x31,0x20,0x00
000590  80808000          DCB      0x80,0x80,0x80,0x00
000594  00808080          DCB      0x00,0x80,0x80,0x80
000598  80818e70          DCB      0x80,0x81,0x8e,0x70
00059c  18060100          DCB      0x18,0x06,0x01,0x00
0005a0  00808080          DCB      0x00,0x80,0x80,0x80
0005a4  80808000          DCB      0x80,0x80,0x80,0x00
0005a8  0021302c          DCB      0x00,0x21,0x30,0x2c
0005ac  22213000          DCB      0x22,0x21,0x30,0x00
0005b0  00000000          DCB      0x00,0x00,0x00,0x00
0005b4  807c0202          DCB      0x80,0x7c,0x02,0x02
0005b8  00000000          DCB      0x00,0x00,0x00,0x00
0005bc  003f4040          DCB      0x00,0x3f,0x40,0x40
0005c0  00000000          DCB      0x00,0x00,0x00,0x00
0005c4  ff000000          DCB      0xff,0x00,0x00,0x00
0005c8  00000000          DCB      0x00,0x00,0x00,0x00
0005cc  ff000000          DCB      0xff,0x00,0x00,0x00
0005d0  0002027c          DCB      0x00,0x02,0x02,0x7c
0005d4  80000000          DCB      0x80,0x00,0x00,0x00
0005d8  0040403f          DCB      0x00,0x40,0x40,0x3f
0005dc  00000000          DCB      0x00,0x00,0x00,0x00
0005e0  00060101          DCB      0x00,0x06,0x01,0x01
0005e4  02020404          DCB      0x02,0x02,0x04,0x04
0005e8  00000000          DCB      0x00,0x00,0x00,0x00
0005ec  00000000          DCB      0x00,0x00,0x00,0x00
